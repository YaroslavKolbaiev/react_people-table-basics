{"version":3,"sources":["api.ts","components/PersonLink.tsx/PersonLink.tsx","components/PeopleTable.tsx/PeopleTable.tsx","components/Loader/Loader.tsx","Pages/PeoplePage.tsx","components/PageNavLink/PageNavLink.tsx","components/MainNav/MainNav.tsx","components/PageNotFound/PageNotFound.tsx","components/HomePage/HomePage.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","parent","personIsParent","getPersonByParent","className","classNames","sex","to","slug","PeopleTable","people","selectedPerson","personsParent","find","person","name","activePerson","map","born","died","motherName","fatherName","Loader","PeoplePage","useState","setPeople","useParams","loading","setLoading","dropError","setDropError","useEffect","res","catch","finally","length","PageNavLink","text","end","isActive","MainNav","role","PageNotFound","HomePage","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.9011dfde.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  parent: string | null\n  getPersonByParent: (value: string | null) => Person | undefined\n};\n\nexport const PersonLink: React.FC<Props> = ({\n  parent,\n  getPersonByParent,\n}) => {\n  const personIsParent = getPersonByParent(parent);\n\n  if (!parent) {\n    return (\n      <td> - </td>\n    );\n  }\n\n  return (\n    <td>\n      {personIsParent ? (\n        <Link\n          className={classNames({\n            'has-text-danger': personIsParent?.sex === 'f',\n          })}\n          to={`/people/${personIsParent?.slug}`}\n        >\n          {parent}\n        </Link>\n      ) : parent}\n    </td>\n  );\n};\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink.tsx';\n\ntype Props = {\n  people: Person[]\n  selectedPerson: string\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people, selectedPerson }) => {\n  const getPersonByParent = (personsParent: string | null) => {\n    return people.find(person => person.name === personsParent);\n  };\n\n  const activePerson = people.find(\n    person => person.slug === selectedPerson,\n  );\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n\n        <table\n          data-cy=\"peopleTable\"\n          className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n        >\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Sex</th>\n              <th>Born</th>\n              <th>Died</th>\n              <th>Mother</th>\n              <th>Father</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {people.map(({\n              name,\n              sex,\n              born,\n              died,\n              motherName,\n              fatherName,\n              slug,\n            }) => (\n              <tr\n                data-cy=\"person\"\n                key={slug}\n                className={classNames({\n                  'has-background-warning':\n                  slug === activePerson?.slug,\n                })}\n              >\n                <td>\n                  <Link\n                    className={classNames({\n                      'has-text-danger': sex === 'f',\n                    })}\n                    to={`/people/${slug}`}\n                  >\n                    {name}\n                  </Link>\n                </td>\n\n                <td>{sex}</td>\n                <td>{born}</td>\n                <td>{died}</td>\n                <PersonLink\n                  parent={motherName}\n                  getPersonByParent={getPersonByParent}\n                />\n\n                <PersonLink\n                  parent={fatherName}\n                  getPersonByParent={getPersonByParent}\n                />\n              </tr>\n            ))}\n\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../api';\nimport { PeopleTable } from '../components/PeopleTable.tsx';\nimport { Person } from '../types';\nimport { Loader } from '../components/Loader';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const { slug = '' } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [dropError, setDropError] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then(res => setPeople(res))\n      .catch(() => setDropError(true))\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      {!loading && !dropError && !people.length && (\n        <p data-cy=\"noPeopleMessage\">\n          There are no people on the server\n        </p>\n      )}\n\n      {!loading && !dropError && people.length && (\n        <PeopleTable people={people} selectedPerson={slug} />\n      )}\n\n      {loading && <Loader /> }\n      {dropError && (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n      )}\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport type Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: React.FC<Props> = ({ text, to }) => {\n  return (\n    <NavLink\n      to={to}\n      end\n      className={({ isActive }) => classNames(\n        'navbar-item', { 'has-background-grey-lighter': isActive },\n      )}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import { PageNavLink } from '../PageNavLink';\n\nexport const MainNav = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink text=\"Home\" to=\"/\" />\n        <PageNavLink text=\"People\" to=\"people\" />\n      </div>\n    </div>\n  </nav>\n);\n","export const PageNotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home page</h1>\n);\n","import {\n  Route, Routes, Navigate,\n} from 'react-router-dom';\n\nimport './App.scss';\nimport { PeoplePage } from './Pages';\nimport { MainNav } from './components/MainNav';\nimport { PageNotFound } from './components/PageNotFound';\nimport { HomePage } from './components/HomePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <MainNav />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"*\" element={<PageNotFound />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}